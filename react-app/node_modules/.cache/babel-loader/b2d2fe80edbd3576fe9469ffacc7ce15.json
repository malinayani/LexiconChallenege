{"ast":null,"code":"var _jsxFileName = \"/Users/malinay/Desktop/MACBOOK_PRO_2019/LexiconChallenege/react-app/src/Movies.js\";\nimport React, { useState, useEffect } from \"react\";\nimport { Link } from \"react-router-dom\";\nimport { makeStyles } from \"@material-ui/core/styles\";\nimport { Row, Col } from \"react-simple-flex-grid\";\nimport \"react-simple-flex-grid/lib/main.css\";\nimport \"./App.css\";\nconst useStyles = makeStyles(theme => ({\n  root: {\n    flexGrow: 1\n  },\n  paper: {\n    height: 140,\n    width: 100\n  },\n  control: {\n    padding: theme.spacing(2)\n  }\n}));\n\nfunction Movies() {\n  const linkStyle = {\n    color: \"black\"\n  };\n  const [itemsCinemaworld, setItemsCinemaworld] = useState([]);\n  useEffect(() => {\n    fetchCinemaworldItems(); //const interval = setInterval(() => {\n    //  fetchCinemaworldItems();\n    //}, 3000);\n    //return () => clearInterval(interval);\n  }, []);\n\n  const fetchCinemaworldItems = async () => {\n    const data = await fetch(\"https://challenge.lexicondigital.com.au/api/cinemaworld/movies\", {\n      headers: {\n        \"x-api-key\": \"Yr2636E6BTD3UCdleMkf7UEdqKnd9n361TQL9An7\"\n      }\n    }); //console.log(data);\n\n    const items = await data.json(); //console.log(data);\n    //console.log(data.json.Movies);\n    //console.log(items.Movies);\n\n    setItemsCinemaworld(items.Movies);\n  };\n\n  return /*#__PURE__*/React.createElement(Row, {\n    gutter: 40,\n    justify: \"center\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 50,\n      columnNumber: 5\n    }\n  }, /*#__PURE__*/React.createElement(Col, {\n    xs: {\n      span: 12\n    },\n    sm: {\n      span: 10\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 51,\n      columnNumber: 7\n    }\n  }, /*#__PURE__*/React.createElement(Row, {\n    gutter: 40,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 52,\n      columnNumber: 9\n    }\n  }, /*#__PURE__*/React.createElement(Col, {\n    span: 12,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 53,\n      columnNumber: 11\n    }\n  }, /*#__PURE__*/React.createElement(\"div\", {\n    className: \"companyList\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 54,\n      columnNumber: 13\n    }\n  }, /*#__PURE__*/React.createElement(\"h2\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 55,\n      columnNumber: 15\n    }\n  }, \"All Movies\"), /*#__PURE__*/React.createElement(Row, {\n    gutter: 10,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 56,\n      columnNumber: 15\n    }\n  }, itemsCinemaworld.map(item => /*#__PURE__*/React.createElement(Col, {\n    md: {\n      span: 3\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 58,\n      columnNumber: 19\n    }\n  }, /*#__PURE__*/React.createElement(Link, {\n    to: `/movies/${item.ID}`,\n    style: linkStyle,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 59,\n      columnNumber: 21\n    }\n  }, /*#__PURE__*/React.createElement(\"img\", {\n    src: `${item.Poster}.jpg`,\n    width: \"100%\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 60,\n      columnNumber: 24\n    }\n  }), item.Title)))))))));\n}\n\nexport default Movies;","map":{"version":3,"sources":["/Users/malinay/Desktop/MACBOOK_PRO_2019/LexiconChallenege/react-app/src/Movies.js"],"names":["React","useState","useEffect","Link","makeStyles","Row","Col","useStyles","theme","root","flexGrow","paper","height","width","control","padding","spacing","Movies","linkStyle","color","itemsCinemaworld","setItemsCinemaworld","fetchCinemaworldItems","data","fetch","headers","items","json","span","map","item","ID","Poster","Title"],"mappings":"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","sourcesContent":["import React, { useState, useEffect } from \"react\";\nimport { Link } from \"react-router-dom\";\nimport { makeStyles } from \"@material-ui/core/styles\";\nimport { Row, Col } from \"react-simple-flex-grid\";\nimport \"react-simple-flex-grid/lib/main.css\";\nimport \"./App.css\";\n\nconst useStyles = makeStyles((theme) => ({\n  root: {\n    flexGrow: 1,\n  },\n  paper: {\n    height: 140,\n    width: 100,\n  },\n  control: {\n    padding: theme.spacing(2),\n  },\n}));\n\nfunction Movies() {\n  const linkStyle = {\n    color: \"black\",\n  };\n\n  const [itemsCinemaworld, setItemsCinemaworld] = useState([]);\n\n  useEffect(() => {\n    fetchCinemaworldItems();\n    //const interval = setInterval(() => {\n    //  fetchCinemaworldItems();\n    //}, 3000);\n    //return () => clearInterval(interval);\n  }, []);\n\n  const fetchCinemaworldItems = async () => {\n    const data = await fetch(\n      \"https://challenge.lexicondigital.com.au/api/cinemaworld/movies\",\n      { headers: { \"x-api-key\": \"Yr2636E6BTD3UCdleMkf7UEdqKnd9n361TQL9An7\" } }\n    );\n    //console.log(data);\n    const items = await data.json();\n    //console.log(data);\n    //console.log(data.json.Movies);\n    //console.log(items.Movies);\n    setItemsCinemaworld(items.Movies);\n  };\n\n  return (\n    <Row gutter={40} justify=\"center\">\n      <Col xs={{ span: 12 }} sm={{ span: 10 }}>\n        <Row gutter={40}>\n          <Col span={12}>\n            <div className=\"companyList\">\n              <h2>All Movies</h2>\n              <Row gutter={10}>\n                {itemsCinemaworld.map((item) => (\n                  <Col md={{ span: 3 }}>\n                    <Link to={`/movies/${item.ID}`} style={linkStyle}>\n                      {<img src={`${item.Poster}.jpg`} width=\"100%\" />}\n                      {item.Title}\n                    </Link>\n                  </Col>\n                ))}\n              </Row>\n            </div>\n          </Col>\n        </Row>\n      </Col>\n    </Row>\n  );\n}\n\nexport default Movies;\n\n"]},"metadata":{},"sourceType":"module"}