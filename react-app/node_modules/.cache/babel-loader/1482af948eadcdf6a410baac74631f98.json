{"ast":null,"code":"var _jsxFileName = \"/Users/malinay/Desktop/MACBOOK_PRO_2019/LexiconChallenege/react-app/src/App.js\";\nimport React, { Component } from 'react';\nimport Contacts from './components/Cinemaworld.js';\nimport MainPage from './pages/index';\nimport { BrowserRouter as Router, Route, Switch, Link, Redirect } from \"react-router-dom\";\nimport MovieID from './components/movieIDs.js';\nconst cinemaworld_url = 'https://challenge.lexicondigital.com.au/api/cinemaworld/movies/';\n\nclass App extends Component {\n  constructor(...args) {\n    super(...args);\n    this.state = {\n      cinemaWorld: [],\n      filmworld: [],\n      id: []\n    };\n  }\n\n  render() {\n    return /*#__PURE__*/React.createElement(Router, {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 17,\n        columnNumber: 13\n      }\n    }, /*#__PURE__*/React.createElement(Route, {\n      exact: true,\n      path: \"/cinema\",\n      component: Contacts,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 18,\n        columnNumber: 16\n      }\n    }, \" \", /*#__PURE__*/React.createElement(Contacts, {\n      cinemaWorld: this.state.cinemaWorld,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 18,\n        columnNumber: 70\n      }\n    }), \" \"), /*#__PURE__*/React.createElement(Route, {\n      exact: true,\n      path: \"/hi\",\n      component: MainPage,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 19,\n        columnNumber: 16\n      }\n    }), /*#__PURE__*/React.createElement(Route, {\n      exact: true,\n      path: \"/405\",\n      component: MovieID,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 20,\n        columnNumber: 16\n      }\n    }, \" \", /*#__PURE__*/React.createElement(MovieID, {\n      id: this.state.id,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 20,\n        columnNumber: 66\n      }\n    }), \" \"));\n  }\n\n  componentDidMount() {\n    fetch(cinemaworld_url, {\n      headers: {\n        'x-api-key': 'Yr2636E6BTD3UCdleMkf7UEdqKnd9n361TQL9An7'\n      }\n    }).then(res => res.json()).then(data => {\n      let tmpArray = [];\n\n      for (var i = 0; i < data.Movies.length; i++) {\n        tmpArray.push(data.Movies[i].ID);\n      }\n\n      this.setState({\n        id: tmpArray\n      });\n      this.setState({\n        cinemaWorld: data.Movies\n      });\n    }).catch(console.log);\n  }\n\n}\n\nexport default App;","map":{"version":3,"sources":["/Users/malinay/Desktop/MACBOOK_PRO_2019/LexiconChallenege/react-app/src/App.js"],"names":["React","Component","Contacts","MainPage","BrowserRouter","Router","Route","Switch","Link","Redirect","MovieID","cinemaworld_url","App","state","cinemaWorld","filmworld","id","render","componentDidMount","fetch","headers","then","res","json","data","tmpArray","i","Movies","length","push","ID","setState","catch","console","log"],"mappings":";AAAA,OAAOA,KAAP,IAAeC,SAAf,QAA+B,OAA/B;AACA,OAAOC,QAAP,MAAqB,6BAArB;AACA,OAAOC,QAAP,MAAqB,eAArB;AACA,SACEC,aAAa,IAAIC,MADnB,EAEEC,KAFF,EAGEC,MAHF,EAIEC,IAJF,EAKEC,QALF,QAMO,kBANP;AAOA,OAAOC,OAAP,MAAoB,0BAApB;AACA,MAAMC,eAAe,GAAG,iEAAxB;;AAEA,MAAMC,GAAN,SAAkBX,SAAlB,CAA4B;AAAA;AAAA;AAAA,SAaxBY,KAbwB,GAahB;AACJC,MAAAA,WAAW,EAAE,EADT;AAEJC,MAAAA,SAAS,EAAE,EAFP;AAGJC,MAAAA,EAAE,EAAE;AAHA,KAbgB;AAAA;;AACxBC,EAAAA,MAAM,GAAG;AACL,wBACI,oBAAC,MAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,oBACG,oBAAC,KAAD;AAAO,MAAA,KAAK,MAAZ;AAAa,MAAA,IAAI,EAAE,SAAnB;AAA6B,MAAA,SAAS,EAAIf,QAA1C;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,yBAAsD,oBAAC,QAAD;AAAU,MAAA,WAAW,EAAE,KAAKW,KAAL,CAAWC,WAAlC;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MAAtD,MADH,eAEG,oBAAC,KAAD;AAAO,MAAA,KAAK,MAAZ;AAAa,MAAA,IAAI,EAAE,KAAnB;AAAyB,MAAA,SAAS,EAAIX,QAAtC;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MAFH,eAGG,oBAAC,KAAD;AAAO,MAAA,KAAK,MAAZ;AAAa,MAAA,IAAI,EAAE,MAAnB;AAA0B,MAAA,SAAS,EAAIO,OAAvC;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,yBAAkD,oBAAC,OAAD;AAAS,MAAA,EAAE,EAAE,KAAKG,KAAL,CAAWG,EAAxB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MAAlD,MAHH,CADJ;AASH;;AAQDE,EAAAA,iBAAiB,GAAG;AAChBC,IAAAA,KAAK,CAACR,eAAD,EAAkB;AAACS,MAAAA,OAAO,EAAE;AAAC,qBAAa;AAAd;AAAV,KAAlB,CAAL,CACKC,IADL,CACUC,GAAG,IAAIA,GAAG,CAACC,IAAJ,EADjB,EAEKF,IAFL,CAEWG,IAAD,IAAU;AACZ,UAAIC,QAAQ,GAAG,EAAf;;AACA,WAAK,IAAIC,CAAC,GAAG,CAAb,EAAgBA,CAAC,GAAGF,IAAI,CAACG,MAAL,CAAYC,MAAhC,EAAwCF,CAAC,EAAzC,EAA6C;AACzCD,QAAAA,QAAQ,CAACI,IAAT,CAAcL,IAAI,CAACG,MAAL,CAAYD,CAAZ,EAAeI,EAA7B;AACH;;AACD,WAAKC,QAAL,CAAc;AAACf,QAAAA,EAAE,EAAES;AAAL,OAAd;AACA,WAAKM,QAAL,CAAc;AAAEjB,QAAAA,WAAW,EAAEU,IAAI,CAACG;AAApB,OAAd;AACH,KATL,EAUKK,KAVL,CAUWC,OAAO,CAACC,GAVnB;AAWH;;AA/BuB;;AAkC5B,eAAetB,GAAf","sourcesContent":["import React, {Component} from 'react';\nimport Contacts from './components/Cinemaworld.js';\nimport MainPage from './pages/index'\nimport {\n  BrowserRouter as Router,\n  Route,\n  Switch,\n  Link,\n  Redirect\n} from \"react-router-dom\";\nimport MovieID from './components/movieIDs.js';\nconst cinemaworld_url = 'https://challenge.lexicondigital.com.au/api/cinemaworld/movies/'\n\nclass App extends Component {\n    render() {\n        return (\n            <Router>\n               <Route exact path= \"/cinema\" component = {Contacts} > <Contacts cinemaWorld={this.state.cinemaWorld} /> </Route>\n               <Route exact path= \"/hi\" component = {MainPage}></Route>\n               <Route exact path= \"/405\" component = {MovieID} > <MovieID id={this.state.id} /> </Route>\n            </Router>\n        \n             \n        )\n    }\n\n    state = {\n        cinemaWorld: [],\n        filmworld: [],\n        id: []\n    };\n\n    componentDidMount() {\n        fetch(cinemaworld_url, {headers: {'x-api-key': 'Yr2636E6BTD3UCdleMkf7UEdqKnd9n361TQL9An7' }})\n            .then(res => res.json())\n            .then((data) => {\n                let tmpArray = []\n                for (var i = 0; i < data.Movies.length; i++) {\n                    tmpArray.push(data.Movies[i].ID)\n                }\n                this.setState({id: tmpArray})\n                this.setState({ cinemaWorld: data.Movies })\n            })\n            .catch(console.log)\n    }\n}\n\nexport default App;"]},"metadata":{},"sourceType":"module"}