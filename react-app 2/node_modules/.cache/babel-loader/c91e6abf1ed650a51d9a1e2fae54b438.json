{"ast":null,"code":"var _jsxFileName = \"/Users/hamzanasir/Downloads/react-app/src/ItemDetail.js\";\nimport React, { useState, useEffect } from \"react\";\nimport \"./App.css\";\n\nfunction Item({\n  match\n}) {\n  const [cinemaToShow, setCinemaToShow] = useState(\"\");\n  useEffect(() => {\n    const matchStr = match.params.id.substring(0, 2);\n    const abortController = new AbortController();\n    const signal = abortController.signal;\n\n    if (matchStr === \"cw\") {\n      fetchCinemaworldItem({\n        signal: signal\n      });\n      setCinemaToShow(\"Cinemaworld\");\n    } else {\n      fetchFilmworldItem({\n        signal: signal\n      });\n      setCinemaToShow(\"Filmworld\");\n    }\n\n    return function cleanup() {\n      abortController.abort();\n    };\n  }, []);\n  const [itemCinemaworld, setItemCinemaworld] = useState({\n    images: {}\n  });\n  const [itemFilmworld, setItemFilmworld] = useState({\n    images: {}\n  });\n\n  const fetchCinemaworldItem = async () => {\n    const fetchCinemaworldItems = await fetch(\"https://challenge.lexicondigital.com.au/api/cinemaworld/movie/\" + match.params.id, {\n      headers: {\n        \"x-api-key\": \"Yr2636E6BTD3UCdleMkf7UEdqKnd9n361TQL9An7\"\n      }\n    });\n    const item = await fetchCinemaworldItems.json();\n    setItemCinemaworld(item);\n    console.log(item);\n  };\n\n  const fetchFilmworldItem = async () => {\n    const fetchFilmworldItems = await fetch(\"https://challenge.lexicondigital.com.au/api/filmworld/movie/\" + match.params.id, {\n      headers: {\n        \"x-api-key\": \"Yr2636E6BTD3UCdleMkf7UEdqKnd9n361TQL9An7\"\n      }\n    });\n    const item = await fetchFilmworldItems.json();\n    setItemFilmworld(item);\n    console.log(item);\n  };\n\n  return /*#__PURE__*/React.createElement(\"div\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 63,\n      columnNumber: 5\n    }\n  }, cinemaToShow === \"Cinemaworld\" ? /*#__PURE__*/React.createElement(\"div\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 65,\n      columnNumber: 9\n    }\n  }, /*#__PURE__*/React.createElement(\"h2\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 66,\n      columnNumber: 11\n    }\n  }, \"Cinemaworld Movies\"), /*#__PURE__*/React.createElement(\"ul\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 67,\n      columnNumber: 11\n    }\n  }, /*#__PURE__*/React.createElement(\"img\", {\n    src: itemCinemaworld.Poster,\n    alt: \"\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 68,\n      columnNumber: 13\n    }\n  }), /*#__PURE__*/React.createElement(\"h5\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 69,\n      columnNumber: 13\n    }\n  }, itemCinemaworld.Tile), /*#__PURE__*/React.createElement(\"h5\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 70,\n      columnNumber: 13\n    }\n  }, itemCinemaworld.Year), /*#__PURE__*/React.createElement(\"h5\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 71,\n      columnNumber: 13\n    }\n  }, itemCinemaworld.Genre), /*#__PURE__*/React.createElement(\"h5\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 72,\n      columnNumber: 13\n    }\n  }, itemCinemaworld.Rated), /*#__PURE__*/React.createElement(\"h5\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 73,\n      columnNumber: 13\n    }\n  }, itemCinemaworld.Released), /*#__PURE__*/React.createElement(\"h5\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 74,\n      columnNumber: 13\n    }\n  }, itemCinemaworld.Language))) : /*#__PURE__*/React.createElement(\"div\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 78,\n      columnNumber: 9\n    }\n  }, /*#__PURE__*/React.createElement(\"h2\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 79,\n      columnNumber: 11\n    }\n  }, \"Filmworld Movies\"), /*#__PURE__*/React.createElement(\"ul\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 80,\n      columnNumber: 11\n    }\n  }, /*#__PURE__*/React.createElement(\"img\", {\n    src: itemFilmworld.Poster,\n    alt: \"\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 81,\n      columnNumber: 13\n    }\n  }), /*#__PURE__*/React.createElement(\"h5\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 82,\n      columnNumber: 13\n    }\n  }, itemFilmworld.Tile), /*#__PURE__*/React.createElement(\"h5\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 83,\n      columnNumber: 13\n    }\n  }, itemFilmworld.Year), /*#__PURE__*/React.createElement(\"h5\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 84,\n      columnNumber: 13\n    }\n  }, itemFilmworld.Genre), /*#__PURE__*/React.createElement(\"h5\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 85,\n      columnNumber: 13\n    }\n  }, itemFilmworld.Rated), /*#__PURE__*/React.createElement(\"h5\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 86,\n      columnNumber: 13\n    }\n  }, itemFilmworld.Released), /*#__PURE__*/React.createElement(\"h5\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 87,\n      columnNumber: 13\n    }\n  }, itemFilmworld.Language))));\n}\n\nexport default Item;\n/**\n * import React, { useState, useEffect } from \"react\";\nimport \"./App.css\";\n\nfunction Item({ match }) {\n  const [cinemaToShow, setCinemaToShow] = useState(\"\");\n  useEffect(() => {\n    const matchStr = match.params.id.substring(0, 2);\n    console.log(matchStr);\n    if (matchStr === \"cw\") {\n      fetchCinemaworldItem();\n      setCinemaToShow(\"Cinemaworld\");\n    } else {\n      fetchFilmworldItem();\n      setCinemaToShow(\"Filmworld\");\n    }\n    //console.log(match.params.id);\n  }, []);\n\n  const [itemCinemaworld, setItemCinemaworld] = useState({\n    images: {},\n  });\n\n  const [itemFilmworld, setItemFilmworld] = useState({\n    images: {},\n  });\n\n  const fetchCinemaworldItem = async () => {\n    const fetchCinemaworldItems = await fetch(\n      \"https://challenge.lexicondigital.com.au/api/cinemaworld/movie/\" +\n        match.params.id,\n      {\n        headers: {\n          \"x-api-key\": \"Yr2636E6BTD3UCdleMkf7UEdqKnd9n361TQL9An7\",\n        },\n      }\n    );\n    const item = await fetchCinemaworldItems.json();\n    setItemCinemaworld(item);\n    console.log(item);\n  };\n\n  const fetchFilmworldItem = async () => {\n    const fetchFilmworldItems = await fetch(\n      \"https://challenge.lexicondigital.com.au/api/cinemaworld/movie/\" +\n        match.params.id,\n      {\n        headers: {\n          \"x-api-key\": \"Yr2636E6BTD3UCdleMkf7UEdqKnd9n361TQL9An7\",\n        },\n      }\n    );\n    const item = await fetchFilmworldItems.json();\n    setItemFilmworld(item);\n    console.log(item);\n  };\n\n  return (\n    <div>\n      {cinemaToShow === \"Cinemaworld\" ? (\n        <div>\n          <h2>Cinemaworld Movies</h2>\n          <ul>\n            <img src={itemCinemaworld.Poster} alt=\"\" />\n            <h5>{itemCinemaworld.Tile}</h5>\n            <h5>{itemCinemaworld.Year}</h5>\n            <h5>{itemCinemaworld.Genre}</h5>\n            <h5>{itemCinemaworld.Rated}</h5>\n            <h5>{itemCinemaworld.Released}</h5>\n            <h5>{itemCinemaworld.Language}</h5>\n          </ul>\n        </div>\n      ) : (\n        <div>\n          <h2>Filmworld Movies</h2>\n          <ul>\n            <img src={itemFilmworld.Poster} alt=\"\" />\n            <h5>{itemFilmworld.Tile}</h5>\n            <h5>{itemFilmworld.Year}</h5>\n            <h5>{itemFilmworld.Genre}</h5>\n            <h5>{itemFilmworld.Rated}</h5>\n            <h5>{itemFilmworld.Released}</h5>\n            <h5>{itemFilmworld.Language}</h5>\n          </ul>\n        </div>\n      )}\n    </div>\n  );\n}\n\nexport default Item;\n\n */","map":{"version":3,"sources":["/Users/hamzanasir/Downloads/react-app/src/ItemDetail.js"],"names":["React","useState","useEffect","Item","match","cinemaToShow","setCinemaToShow","matchStr","params","id","substring","abortController","AbortController","signal","fetchCinemaworldItem","fetchFilmworldItem","cleanup","abort","itemCinemaworld","setItemCinemaworld","images","itemFilmworld","setItemFilmworld","fetchCinemaworldItems","fetch","headers","item","json","console","log","fetchFilmworldItems","Poster","Tile","Year","Genre","Rated","Released","Language"],"mappings":"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","sourcesContent":["import React, { useState, useEffect } from \"react\";\nimport \"./App.css\";\n\nfunction Item({ match }) {\n  const [cinemaToShow, setCinemaToShow] = useState(\"\");\n\n  useEffect(() => {\n    const matchStr = match.params.id.substring(0, 2);\n    const abortController = new AbortController();\n    const signal = abortController.signal;\n\n    if (matchStr === \"cw\") {\n      fetchCinemaworldItem({ signal: signal });\n      setCinemaToShow(\"Cinemaworld\");\n    } else {\n      fetchFilmworldItem({ signal: signal });\n      setCinemaToShow(\"Filmworld\");\n    }\n    return function cleanup() {\n      abortController.abort();\n    };\n  }, []);\n\n  const [itemCinemaworld, setItemCinemaworld] = useState({\n    images: {},\n  });\n\n  const [itemFilmworld, setItemFilmworld] = useState({\n    images: {},\n  });\n\n  const fetchCinemaworldItem = async () => {\n    const fetchCinemaworldItems = await fetch(\n      \"https://challenge.lexicondigital.com.au/api/cinemaworld/movie/\" +\n        match.params.id,\n      {\n        headers: {\n          \"x-api-key\": \"Yr2636E6BTD3UCdleMkf7UEdqKnd9n361TQL9An7\",\n        },\n      }\n    );\n    const item = await fetchCinemaworldItems.json();\n    setItemCinemaworld(item);\n    console.log(item);\n  };\n\n  const fetchFilmworldItem = async () => {\n    const fetchFilmworldItems = await fetch(\n      \"https://challenge.lexicondigital.com.au/api/filmworld/movie/\" +\n        match.params.id,\n      {\n        headers: {\n          \"x-api-key\": \"Yr2636E6BTD3UCdleMkf7UEdqKnd9n361TQL9An7\",\n        },\n      }\n    );\n    const item = await fetchFilmworldItems.json();\n    setItemFilmworld(item);\n    console.log(item);\n  };\n\n  return (\n    <div>\n      {cinemaToShow === \"Cinemaworld\" ? (\n        <div>\n          <h2>Cinemaworld Movies</h2>\n          <ul>\n            <img src={itemCinemaworld.Poster} alt=\"\" />\n            <h5>{itemCinemaworld.Tile}</h5>\n            <h5>{itemCinemaworld.Year}</h5>\n            <h5>{itemCinemaworld.Genre}</h5>\n            <h5>{itemCinemaworld.Rated}</h5>\n            <h5>{itemCinemaworld.Released}</h5>\n            <h5>{itemCinemaworld.Language}</h5>\n          </ul>\n        </div>\n      ) : (\n        <div>\n          <h2>Filmworld Movies</h2>\n          <ul>\n            <img src={itemFilmworld.Poster} alt=\"\" />\n            <h5>{itemFilmworld.Tile}</h5>\n            <h5>{itemFilmworld.Year}</h5>\n            <h5>{itemFilmworld.Genre}</h5>\n            <h5>{itemFilmworld.Rated}</h5>\n            <h5>{itemFilmworld.Released}</h5>\n            <h5>{itemFilmworld.Language}</h5>\n          </ul>\n        </div>\n      )}\n    </div>\n  );\n}\n\nexport default Item;\n\n/**\n * import React, { useState, useEffect } from \"react\";\nimport \"./App.css\";\n\nfunction Item({ match }) {\n  const [cinemaToShow, setCinemaToShow] = useState(\"\");\n  useEffect(() => {\n    const matchStr = match.params.id.substring(0, 2);\n    console.log(matchStr);\n    if (matchStr === \"cw\") {\n      fetchCinemaworldItem();\n      setCinemaToShow(\"Cinemaworld\");\n    } else {\n      fetchFilmworldItem();\n      setCinemaToShow(\"Filmworld\");\n    }\n    //console.log(match.params.id);\n  }, []);\n\n  const [itemCinemaworld, setItemCinemaworld] = useState({\n    images: {},\n  });\n\n  const [itemFilmworld, setItemFilmworld] = useState({\n    images: {},\n  });\n\n  const fetchCinemaworldItem = async () => {\n    const fetchCinemaworldItems = await fetch(\n      \"https://challenge.lexicondigital.com.au/api/cinemaworld/movie/\" +\n        match.params.id,\n      {\n        headers: {\n          \"x-api-key\": \"Yr2636E6BTD3UCdleMkf7UEdqKnd9n361TQL9An7\",\n        },\n      }\n    );\n    const item = await fetchCinemaworldItems.json();\n    setItemCinemaworld(item);\n    console.log(item);\n  };\n\n  const fetchFilmworldItem = async () => {\n    const fetchFilmworldItems = await fetch(\n      \"https://challenge.lexicondigital.com.au/api/cinemaworld/movie/\" +\n        match.params.id,\n      {\n        headers: {\n          \"x-api-key\": \"Yr2636E6BTD3UCdleMkf7UEdqKnd9n361TQL9An7\",\n        },\n      }\n    );\n    const item = await fetchFilmworldItems.json();\n    setItemFilmworld(item);\n    console.log(item);\n  };\n\n  return (\n    <div>\n      {cinemaToShow === \"Cinemaworld\" ? (\n        <div>\n          <h2>Cinemaworld Movies</h2>\n          <ul>\n            <img src={itemCinemaworld.Poster} alt=\"\" />\n            <h5>{itemCinemaworld.Tile}</h5>\n            <h5>{itemCinemaworld.Year}</h5>\n            <h5>{itemCinemaworld.Genre}</h5>\n            <h5>{itemCinemaworld.Rated}</h5>\n            <h5>{itemCinemaworld.Released}</h5>\n            <h5>{itemCinemaworld.Language}</h5>\n          </ul>\n        </div>\n      ) : (\n        <div>\n          <h2>Filmworld Movies</h2>\n          <ul>\n            <img src={itemFilmworld.Poster} alt=\"\" />\n            <h5>{itemFilmworld.Tile}</h5>\n            <h5>{itemFilmworld.Year}</h5>\n            <h5>{itemFilmworld.Genre}</h5>\n            <h5>{itemFilmworld.Rated}</h5>\n            <h5>{itemFilmworld.Released}</h5>\n            <h5>{itemFilmworld.Language}</h5>\n          </ul>\n        </div>\n      )}\n    </div>\n  );\n}\n\nexport default Item;\n\n */\n"]},"metadata":{},"sourceType":"module"}